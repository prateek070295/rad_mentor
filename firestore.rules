rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignedIn() {
      return request.auth != null;
    }

    function isRequestUser(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    function isAdmin() {
      return isSignedIn() &&
        exists(/databases/$(database)/documents/admins/$(request.auth.uid));
    }

    match /plans/{userId} {
      allow read, write: if isRequestUser(userId);

      match /weeks/{weekId} {
        allow read, write: if isRequestUser(userId);
      }

      match /masterQueue/{queueId} {
        allow read, write: if isRequestUser(userId);
      }

      match /master/{docId} {
        allow read, write: if isRequestUser(userId);
      }
    }

    match /admins/{adminId} {
      allow read, write: if isAdmin();
    }

    match /admins/{adminId}/invites/{inviteId} {
      allow read, write: if isAdmin();
    }

    match /achievements_definitions/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    match /users/{userId} {
      allow read, write: if isRequestUser(userId);

      match /achievements/{achievementId} {
        allow read, write: if isRequestUser(userId);
      }

      match /notifications/{notificationId} {
        allow read, write: if isRequestUser(userId);
      }
    }

    match /sections/{sectionId} {
      allow read: if isSignedIn();
      allow write: if false;

      match /nodes/{nodeId} {
        allow read: if isSignedIn();
        allow write: if false;
      }
    }

    match /study_items/{itemId} {
      allow read: if isSignedIn();
      allow update: if isAdmin();
      allow create, delete: if false;
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}
